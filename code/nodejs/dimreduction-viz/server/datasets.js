const mnist = require('mnist');

// 准备MNIST数据集 - 小规模 (1000个样本，适合快速测试)
function prepareMNISTSmall() {
  const set = mnist.set(8000, 2000);
  const training = set.training.slice(0, 1000);

  const data = training.map(item => item.input);
  const labels = training.map(item => item.output.indexOf(1));

  return {
    name: 'MNIST手写数字 (小)',
    nameEn: 'MNIST Digits (Small)',
    description: '1000个样本，28×28像素手写数字图像，784维特征',
    descriptionEn: '1000 samples, 28×28 pixel handwritten digit images, 784 features',
    data: data,
    labels: labels,
    features: 784,
    samples: data.length
  };
}

// 准备MNIST数据集 - 中等规模 (3000个样本)
function prepareMNISTMedium() {
  const set = mnist.set(8000, 2000);
  const training = set.training.slice(0, 3000);

  const data = training.map(item => item.input);
  const labels = training.map(item => item.output.indexOf(1));

  return {
    name: 'MNIST手写数字 (中)',
    nameEn: 'MNIST Digits (Medium)',
    description: '3000个样本，28×28像素手写数字图像，784维特征',
    descriptionEn: '3000 samples, 28×28 pixel handwritten digit images, 784 features',
    data: data,
    labels: labels,
    features: 784,
    samples: data.length
  };
}

// 准备MNIST数据集 - 大规模 (8000个样本，完整训练集)
function prepareMNISTLarge() {
  const set = mnist.set(8000, 2000);
  const training = set.training;

  const data = training.map(item => item.input);
  const labels = training.map(item => item.output.indexOf(1));

  return {
    name: 'MNIST手写数字 (大)',
    nameEn: 'MNIST Digits (Large)',
    description: '8000个样本，28×28像素手写数字图像，784维特征',
    descriptionEn: '8000 samples, 28×28 pixel handwritten digit images, 784 features',
    data: data,
    labels: labels,
    features: 784,
    samples: data.length
  };
}

// Iris数据集
function prepareIris() {
  const data = [
    [5.1, 3.5, 1.4, 0.2], [4.9, 3.0, 1.4, 0.2], [4.7, 3.2, 1.3, 0.2], [4.6, 3.1, 1.5, 0.2],
    [5.0, 3.6, 1.4, 0.2], [5.4, 3.9, 1.7, 0.4], [4.6, 3.4, 1.4, 0.3], [5.0, 3.4, 1.5, 0.2],
    [4.4, 2.9, 1.4, 0.2], [4.9, 3.1, 1.5, 0.1], [5.4, 3.7, 1.5, 0.2], [4.8, 3.4, 1.6, 0.2],
    [4.8, 3.0, 1.4, 0.1], [4.3, 3.0, 1.1, 0.1], [5.8, 4.0, 1.2, 0.2], [5.7, 4.4, 1.5, 0.4],
    [5.4, 3.9, 1.3, 0.4], [5.1, 3.5, 1.4, 0.3], [5.7, 3.8, 1.7, 0.3], [5.1, 3.8, 1.5, 0.3],
    [5.4, 3.4, 1.7, 0.2], [5.1, 3.7, 1.5, 0.4], [4.6, 3.6, 1.0, 0.2], [5.1, 3.3, 1.7, 0.5],
    [4.8, 3.4, 1.9, 0.2], [5.0, 3.0, 1.6, 0.2], [5.0, 3.4, 1.6, 0.4], [5.2, 3.5, 1.5, 0.2],
    [5.2, 3.4, 1.4, 0.2], [4.7, 3.2, 1.6, 0.2], [4.8, 3.1, 1.6, 0.2], [5.4, 3.4, 1.5, 0.4],
    [5.2, 4.1, 1.5, 0.1], [5.5, 4.2, 1.4, 0.2], [4.9, 3.1, 1.5, 0.2], [5.0, 3.2, 1.2, 0.2],
    [5.5, 3.5, 1.3, 0.2], [4.9, 3.6, 1.4, 0.1], [4.4, 3.0, 1.3, 0.2], [5.1, 3.4, 1.5, 0.2],
    [5.0, 3.5, 1.3, 0.3], [4.5, 2.3, 1.3, 0.3], [4.4, 3.2, 1.3, 0.2], [5.0, 3.5, 1.6, 0.6],
    [5.1, 3.8, 1.9, 0.4], [4.8, 3.0, 1.4, 0.3], [5.1, 3.8, 1.6, 0.2], [4.6, 3.2, 1.4, 0.2],
    [5.3, 3.7, 1.5, 0.2], [5.0, 3.3, 1.4, 0.2], [7.0, 3.2, 4.7, 1.4], [6.4, 3.2, 4.5, 1.5],
    [6.9, 3.1, 4.9, 1.5], [5.5, 2.3, 4.0, 1.3], [6.5, 2.8, 4.6, 1.5], [5.7, 2.8, 4.5, 1.3],
    [6.3, 3.3, 4.7, 1.6], [4.9, 2.4, 3.3, 1.0], [6.6, 2.9, 4.6, 1.3], [5.2, 2.7, 3.9, 1.4],
    [5.0, 2.0, 3.5, 1.0], [5.9, 3.0, 4.2, 1.5], [6.0, 2.2, 4.0, 1.0], [6.1, 2.9, 4.7, 1.4],
    [5.6, 2.9, 3.6, 1.3], [6.7, 3.1, 4.4, 1.4], [5.6, 3.0, 4.5, 1.5], [5.8, 2.7, 4.1, 1.0],
    [6.2, 2.2, 4.5, 1.5], [5.6, 2.5, 3.9, 1.1], [5.9, 3.2, 4.8, 1.8], [6.1, 2.8, 4.0, 1.3],
    [6.3, 2.5, 4.9, 1.5], [6.1, 2.8, 4.7, 1.2], [6.4, 2.9, 4.3, 1.3], [6.6, 3.0, 4.4, 1.4],
    [6.8, 2.8, 4.8, 1.4], [6.7, 3.0, 5.0, 1.7], [6.0, 2.9, 4.5, 1.5], [5.7, 2.6, 3.5, 1.0],
    [5.5, 2.4, 3.8, 1.1], [5.5, 2.4, 3.7, 1.0], [5.8, 2.7, 3.9, 1.2], [6.0, 2.7, 5.1, 1.6],
    [5.4, 3.0, 4.5, 1.5], [6.0, 3.4, 4.5, 1.6], [6.7, 3.1, 4.7, 1.5], [6.3, 2.3, 4.4, 1.3],
    [5.6, 3.0, 4.1, 1.3], [5.5, 2.5, 4.0, 1.3], [5.5, 2.6, 4.4, 1.2], [6.1, 3.0, 4.6, 1.4],
    [5.8, 2.6, 4.0, 1.2], [5.0, 2.3, 3.3, 1.0], [5.6, 2.7, 4.2, 1.3], [5.7, 3.0, 4.2, 1.2],
    [5.7, 2.9, 4.2, 1.3], [6.2, 2.9, 4.3, 1.3], [5.1, 2.5, 3.0, 1.1], [5.7, 2.8, 4.1, 1.3],
    [6.3, 3.3, 6.0, 2.5], [5.8, 2.7, 5.1, 1.9], [7.1, 3.0, 5.9, 2.1], [6.3, 2.9, 5.6, 1.8],
    [6.5, 3.0, 5.8, 2.2], [7.6, 3.0, 6.6, 2.1], [4.9, 2.5, 4.5, 1.7], [7.3, 2.9, 6.3, 1.8],
    [6.7, 2.5, 5.8, 1.8], [7.2, 3.6, 6.1, 2.5], [6.5, 3.2, 5.1, 2.0], [6.4, 2.7, 5.3, 1.9],
    [6.8, 3.0, 5.5, 2.1], [5.7, 2.5, 5.0, 2.0], [5.8, 2.8, 5.1, 2.4], [6.4, 3.2, 5.3, 2.3],
    [6.5, 3.0, 5.5, 1.8], [7.7, 3.8, 6.7, 2.2], [7.7, 2.6, 6.9, 2.3], [6.0, 2.2, 5.0, 1.5],
    [6.9, 3.2, 5.7, 2.3], [5.6, 2.8, 4.9, 2.0], [7.7, 2.8, 6.7, 2.0], [6.3, 2.7, 4.9, 1.8],
    [6.7, 3.3, 5.7, 2.1], [7.2, 3.2, 6.0, 1.8], [6.2, 2.8, 4.8, 1.8], [6.1, 3.0, 4.9, 1.8],
    [6.4, 2.8, 5.6, 2.1], [7.2, 3.0, 5.8, 1.6], [7.4, 2.8, 6.1, 1.9], [7.9, 3.8, 6.4, 2.0],
    [6.4, 2.8, 5.6, 2.2], [6.3, 2.8, 5.1, 1.5], [6.1, 2.6, 5.6, 1.4], [7.7, 3.0, 6.1, 2.3],
    [6.3, 3.4, 5.6, 2.4], [6.4, 3.1, 5.5, 1.8], [6.0, 3.0, 4.8, 1.8], [6.9, 3.1, 5.4, 2.1],
    [6.7, 3.1, 5.6, 2.4], [6.9, 3.1, 5.1, 2.3], [5.8, 2.7, 5.1, 1.9], [6.8, 3.2, 5.9, 2.3],
    [6.7, 3.3, 5.7, 2.5], [6.7, 3.0, 5.2, 2.3], [6.3, 2.5, 5.0, 1.9], [6.5, 3.0, 5.2, 2.0],
    [6.2, 3.4, 5.4, 2.3], [5.9, 3.0, 5.1, 1.8]
  ];

  const labels = [
    ...Array(50).fill(0),  // Setosa
    ...Array(50).fill(1),  // Versicolor
    ...Array(50).fill(2)   // Virginica
  ];

  return {
    name: 'Iris鸢尾花',
    nameEn: 'Iris Flowers',
    description: '150个样本，4维特征（花萼长宽、花瓣长宽）',
    descriptionEn: '150 samples, 4 features (sepal length/width, petal length/width)',
    data: data,
    labels: labels,
    features: 4,
    samples: data.length
  };
}

// Wine质量数据集（红葡萄酒）
function prepareWine() {
  // 简化版的wine数据集 (取部分样本)
  const data = [
    [7.4, 0.70, 0.00, 1.9, 0.076, 11, 34, 0.9978, 3.51, 0.56, 9.4],
    [7.8, 0.88, 0.00, 2.6, 0.098, 25, 67, 0.9968, 3.20, 0.68, 9.8],
    [7.8, 0.76, 0.04, 2.3, 0.092, 15, 54, 0.9970, 3.26, 0.65, 9.8],
    [11.2, 0.28, 0.56, 1.9, 0.075, 17, 60, 0.9980, 3.16, 0.58, 9.8],
    [7.4, 0.70, 0.00, 1.9, 0.076, 11, 34, 0.9978, 3.51, 0.56, 9.4],
    [7.4, 0.66, 0.00, 1.8, 0.075, 13, 40, 0.9978, 3.51, 0.56, 9.4],
    [7.9, 0.60, 0.06, 1.6, 0.069, 15, 59, 0.9964, 3.30, 0.46, 9.4],
    [7.3, 0.65, 0.00, 1.2, 0.065, 15, 21, 0.9946, 3.39, 0.47, 10.0],
    [7.8, 0.58, 0.02, 2.0, 0.073, 9, 18, 0.9968, 3.36, 0.57, 9.5],
    [7.5, 0.50, 0.36, 6.1, 0.071, 17, 102, 0.9978, 3.35, 0.80, 10.5],
    [6.7, 0.58, 0.08, 1.8, 0.097, 15, 65, 0.9959, 3.28, 0.54, 9.2],
    [7.5, 0.50, 0.36, 6.1, 0.071, 17, 102, 0.9978, 3.35, 0.80, 10.5],
    [5.6, 0.615, 0.00, 1.6, 0.089, 16, 59, 0.9943, 3.58, 0.52, 9.9],
    [7.8, 0.610, 0.29, 1.6, 0.114, 9, 29, 0.9974, 3.26, 1.56, 9.1],
    [8.9, 0.620, 0.18, 3.8, 0.176, 52, 145, 0.9986, 3.16, 0.88, 9.2],
    [8.9, 0.620, 0.19, 3.9, 0.170, 51, 148, 0.9986, 3.17, 0.93, 9.2],
    [8.5, 0.280, 0.56, 1.8, 0.092, 35, 103, 0.9969, 3.30, 0.75, 10.5],
    [8.1, 0.560, 0.28, 1.7, 0.368, 16, 56, 0.9968, 3.11, 1.28, 9.3],
    [7.4, 0.590, 0.08, 4.4, 0.086, 6, 29, 0.9974, 3.38, 0.50, 9.0],
    [7.9, 0.320, 0.51, 1.8, 0.341, 17, 56, 0.9969, 3.04, 1.08, 9.2],
    [8.9, 0.220, 0.48, 1.8, 0.077, 29, 60, 0.9968, 3.39, 0.53, 9.4],
    [7.6, 0.390, 0.31, 2.3, 0.082, 23, 71, 0.9982, 3.52, 0.65, 9.7],
    [7.9, 0.430, 0.21, 1.6, 0.106, 10, 37, 0.9966, 3.17, 0.91, 9.5],
    [8.5, 0.490, 0.11, 2.3, 0.084, 9, 67, 0.9968, 3.17, 0.53, 9.4],
    [6.9, 0.400, 0.14, 2.4, 0.085, 21, 40, 0.9968, 3.43, 0.63, 9.7],
    [6.3, 0.390, 0.16, 1.4, 0.080, 11, 23, 0.9955, 3.34, 0.56, 9.3],
    [7.6, 0.410, 0.24, 1.8, 0.080, 4, 11, 0.9962, 3.28, 0.59, 9.5],
    [7.9, 0.430, 0.21, 1.6, 0.106, 10, 37, 0.9966, 3.17, 0.91, 9.5],
    [7.1, 0.710, 0.00, 1.9, 0.080, 14, 35, 0.9972, 3.47, 0.55, 9.4],
    [7.8, 0.645, 0.00, 2.0, 0.082, 8, 16, 0.9964, 3.38, 0.59, 9.8],
    [6.7, 0.760, 0.02, 1.8, 0.078, 13, 29, 0.9970, 3.55, 0.63, 9.8],
    [6.9, 0.605, 0.12, 10.7, 0.073, 40, 83, 0.9993, 3.45, 0.52, 9.4],
    [7.6, 0.670, 0.14, 1.5, 0.074, 28, 49, 0.9958, 3.33, 0.60, 9.8],
    [8.3, 0.610, 0.30, 2.1, 0.084, 11, 50, 0.9972, 3.26, 0.83, 9.7],
    [6.6, 0.705, 0.07, 1.6, 0.076, 6, 15, 0.9960, 3.44, 0.58, 9.8],
    [7.7, 0.935, 0.43, 2.2, 0.114, 22, 114, 0.9975, 3.19, 0.91, 9.3],
    [8.7, 0.780, 0.51, 1.7, 0.415, 12, 66, 0.9986, 3.41, 1.39, 9.4],
    [6.4, 0.610, 0.08, 1.8, 0.090, 6, 12, 0.9969, 3.61, 0.58, 9.9],
    [5.2, 0.340, 0.00, 1.8, 0.050, 27, 63, 0.9916, 3.68, 0.79, 14.0],
    [6.2, 0.660, 0.48, 1.2, 0.029, 29, 75, 0.9892, 3.33, 0.39, 12.8],
    [6.1, 0.360, 0.24, 1.5, 0.046, 15, 28, 0.9920, 3.45, 0.44, 11.3],
    [7.0, 0.400, 0.24, 1.8, 0.041, 16, 32, 0.9952, 3.46, 0.62, 10.9],
    [6.8, 0.390, 0.34, 7.4, 0.020, 38, 133, 0.9934, 3.18, 0.44, 12.0],
    [6.2, 0.380, 0.04, 1.8, 0.036, 29, 93, 0.9912, 3.27, 0.36, 11.2],
    [5.4, 0.835, 0.08, 1.2, 0.046, 13, 93, 0.9924, 3.57, 0.85, 13.0],
    [6.2, 0.460, 0.29, 2.1, 0.074, 15, 26, 0.9955, 3.40, 0.63, 11.0],
    [6.1, 0.380, 0.15, 7.8, 0.028, 26, 121, 0.9920, 3.25, 0.41, 12.6],
    [5.2, 0.320, 0.25, 1.8, 0.103, 13, 50, 0.9957, 3.38, 0.55, 9.2],
    [6.2, 0.670, 0.86, 1.8, 0.119, 17, 47, 0.9945, 3.31, 0.53, 10.4],
    [5.0, 0.380, 0.01, 1.6, 0.048, 26, 60, 0.9917, 3.70, 0.75, 14.0],
    [6.2, 0.660, 0.63, 1.2, 0.029, 29, 49, 0.9898, 3.33, 0.39, 12.8],
    [6.3, 0.300, 0.48, 2.5, 0.034, 23, 91, 0.9917, 3.28, 0.50, 12.5],
    [5.9, 0.550, 0.10, 2.2, 0.062, 39, 51, 0.9951, 3.51, 0.76, 12.0],
    [7.3, 0.450, 0.36, 5.9, 0.074, 12, 87, 0.9978, 3.33, 0.83, 10.5],
    [7.2, 0.490, 0.24, 2.2, 0.070, 6, 25, 0.9986, 3.42, 0.77, 10.0],
    [6.9, 0.545, 0.04, 2.0, 0.099, 10, 22, 0.9969, 3.51, 0.68, 9.4]
  ];

  const labels = [
    5, 5, 5, 6, 5, 5, 5, 7, 7, 5, 5, 5, 5, 5, 5, 5, 7, 5, 6, 6,
    6, 5, 5, 5, 6, 6, 6, 5, 5, 6, 5, 5, 6, 5, 5, 5, 5, 6, 6, 6,
    6, 6, 6, 6, 5, 6, 6, 5, 5, 6, 6, 7, 6, 6, 5, 6
  ];

  return {
    name: 'Wine红葡萄酒质量',
    nameEn: 'Wine Quality (Red)',
    description: '红葡萄酒的11维化学特征（酸度、残糖、pH等）',
    descriptionEn: '11 chemical features of red wine (acidity, sugar, pH, etc.)',
    data: data,
    labels: labels,
    features: 11,
    samples: data.length
  };
}

module.exports = {
  prepareMNISTSmall,
  prepareMNISTMedium,
  prepareMNISTLarge,
  prepareIris,
  prepareWine
};
